{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\chris\\\\Documents\\\\TS\\\\Christopher-BA\\\\house-rule-platform\\\\node_modules\\\\@angular-devkit\\\\build-angular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport * as d3 from 'd3';\nimport { blacklist, originalOrder, questionCodeToNameMapper } from '../../assets/Data/Data';\nimport * as ss from 'simple-statistics';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/checkbox\";\nimport * as i5 from \"../likert-display/likert-display.component\";\n\nfunction AnalysisComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"label\", 7);\n    i0.ɵɵtext(3, \" Likert Subquestion Codes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 8);\n    i0.ɵɵlistener(\"ngModelChange\", function AnalysisComponent_div_10_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.likertCodes = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AnalysisComponent_div_10_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.downloadLikertTranslationsCodes();\n    });\n    i0.ɵɵtext(6, \" Likert Subquestion Download \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n    i0.ɵɵtext(9, \" Text Question Codes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 10)(11, \"div\", 11)(12, \"input\", 12);\n    i0.ɵɵlistener(\"ngModelChange\", function AnalysisComponent_div_10_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.textCodes = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\");\n    i0.ɵɵtext(15, \" APP \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"mat-checkbox\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function AnalysisComponent_div_10_Template_mat_checkbox_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.useAppFiltered = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"label\");\n    i0.ɵɵtext(18, \" HR \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"mat-checkbox\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function AnalysisComponent_div_10_Template_mat_checkbox_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.useHRFiltered = $event;\n    });\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(20, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AnalysisComponent_div_10_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.downloadTextQuestionCodes();\n    });\n    i0.ɵɵtext(21, \" Test Question Download \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.likertCodes);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.textCodes);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.useAppFiltered);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.useHRFiltered);\n  }\n}\n\nfunction AnalysisComponent_div_11_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const pair_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", pair_r12.key, \": \", pair_r12.value, \" \");\n  }\n}\n\nfunction AnalysisComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"ul\");\n    i0.ɵɵtemplate(2, AnalysisComponent_div_11_li_2_Template, 2, 2, \"li\", 15);\n    i0.ɵɵpipe(3, \"keyvalue\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(3, 1, ctx_r1.numbers, ctx_r1.originalOrder));\n  }\n}\n\nfunction AnalysisComponent_ng_container_13_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-likert-display\", 16)(2, \"hr\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const keyVal_r14 = ctx.$implicit;\n    const i_r15 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"index\", i_r15)(\"title\", keyVal_r14.key)(\"map\", keyVal_r14.value);\n  }\n}\n\nfunction AnalysisComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 5)(2, \"h3\");\n    i0.ɵɵtext(3, \"Mean Compares and Correlations\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5, \" There was not a significant relationship between how much the participants' liked creating house rules and their interest in sharing their house rules on the platform, r = -0.97, p = 0.62. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(6, AnalysisComponent_ng_container_13_ng_container_6_Template, 3, 3, \"ng-container\", 15);\n    i0.ɵɵpipe(7, \"keyvalue\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(7, 1, ctx_r2.likertMapper, ctx_r2.originalOrder));\n  }\n}\n\nfunction AnalysisComponent_ng_container_14_div_1_li_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const trait_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", trait_r21.key, \": \", trait_r21.value, \" \");\n  }\n}\n\nfunction AnalysisComponent_ng_container_14_div_1_li_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const trait_r22 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", trait_r22.key, \": \", trait_r22.value, \" \");\n  }\n}\n\nfunction AnalysisComponent_ng_container_14_div_1_li_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const trait_r23 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", trait_r23.key, \": \", trait_r23.value, \" \");\n  }\n}\n\nfunction AnalysisComponent_ng_container_14_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h2\", 19);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"div\", 20)(5, \"h4\");\n    i0.ɵɵtext(6, \" BFI \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ul\");\n    i0.ɵɵtemplate(8, AnalysisComponent_ng_container_14_div_1_li_8_Template, 2, 2, \"li\", 15);\n    i0.ɵɵpipe(9, \"keyvalue\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"div\", 20)(11, \"h4\");\n    i0.ɵɵtext(12, \" IMG \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"ul\");\n    i0.ɵɵtemplate(14, AnalysisComponent_ng_container_14_div_1_li_14_Template, 2, 2, \"li\", 15);\n    i0.ɵɵpipe(15, \"keyvalue\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 20)(17, \"h4\");\n    i0.ɵɵtext(18, \" HCI \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"ul\");\n    i0.ɵɵtemplate(20, AnalysisComponent_ng_container_14_div_1_li_20_Template, 2, 2, \"li\", 15);\n    i0.ɵɵpipe(21, \"keyvalue\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const res_r17 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(res_r17.id);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(9, 4, ctx_r16.bfiMapper.get(res_r17.id), ctx_r16.originalOrder));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(15, 7, ctx_r16.IMGMapper.get(res_r17.id), ctx_r16.originalOrder));\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(21, 10, ctx_r16.HCIMapper.get(res_r17.id), ctx_r16.originalOrder));\n  }\n}\n\nfunction AnalysisComponent_ng_container_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AnalysisComponent_ng_container_14_div_1_Template, 22, 13, \"div\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredResponses);\n  }\n}\n\nexport class AnalysisComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.originalOrder = originalOrder; // display string to any for html\n\n    this.numbers = new Map(); // Question Code to map of answer option to count\n\n    this.codeMapper = new Map(); // Participant ID to Map of trait name to score\n\n    this.bfiMapper = new Map(); // Participant ID to Map of trait name to score\n\n    this.IMGMapper = new Map(); // Participant ID to Map of trait name to score\n\n    this.HCIMapper = new Map(); // likert mapper\n\n    this.likertMapper = new Map(); // Flat likert mapper\n\n    this.flatLikertMapper = new Map();\n  }\n\n  ngOnInit() {\n    this.readData();\n  }\n\n  readData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const res = yield d3.csv('./../assets/Data/dailyData.csv');\n      let participants = [];\n\n      for (let r of res) {\n        // Remove potential empty lines and remove blacklisted participants\n        if (r['id'] !== '' && !blacklist.some(bannedID => bannedID === r['id'])) {\n          participants.push(r);\n        }\n      }\n\n      _this.numbers.set('# Responses', participants.length);\n\n      _this.filteredResponses = participants; // Remove the ones that don't want their data used\n\n      _this.filteredResponses = participants.filter(participant => {\n        return participant['G12Q00002'] === 'Yes';\n      }); // Remove the ones that skipped the survey\n\n      _this.filteredResponses = _this.filteredResponses.filter(participant => {\n        return participant['G2Q00005'] !== 'Skip to the end and get the asset pack';\n      }); // Remove the ones that answered they don't play any board games\n\n      _this.filteredResponses = _this.filteredResponses.filter(participant => {\n        return !(participant['G3Q00002'] === 'Never' && participant['G3Q00003'] === 'No');\n      }); // function filterHelper(length: number, participant: Response, code: string, filled: boolean): boolean {\n      //   for (let i = 1; i <= length; i++) {\n      //     let qc;\n      //     if (i < 10) {\n      //       qc = code + `[SQ00${i}]`;\n      //     } else {\n      //       qc = code + `[SQ0${i}]`;\n      //     }\n      //     filled = filled && !(participant[qc] === '' || participant[qc] === 'N/A');\n      //   }\n      //   return filled;\n      // }\n      // Remove the ones that somehow didn't fill out measures\n      // this.filteredResponses = this.filteredResponses.filter(participant => {\n      //   let filled = true;\n      //\n      //   const lengthBFI = 11;\n      //   const g9Q00001 = 'G9Q00001';\n      //\n      //   filled = filterHelper(lengthBFI, participant, g9Q00001, filled);\n      //\n      //   const lengthIMG = 15;\n      //   const codeImg = 'G10Q00001';\n      //\n      //   filled = filterHelper(lengthIMG, participant, codeImg, filled);\n      //\n      //\n      //   const lengthAppFeatures = 19;\n      //   const codeAppFeatures = 'G8Q00004';\n      //\n      //   filled = filterHelper(lengthAppFeatures, participant, codeAppFeatures, filled);\n      //\n      //   return filled;\n      //\n      // });\n      // Remove the ones that were too fast or slow\n\n      const times = _this.filteredResponses.map(x => parseFloat(x.interviewtime));\n\n      const q1 = ss.quantile(times, 0.25);\n      const q3 = ss.quantile(times, 0.75);\n      const kOut = 1.5;\n      const kFar = 3;\n      const outMin = q1 - kOut * (q3 - q1);\n      const outMax = q3 + kOut * (q3 - q1);\n      const farMin = q1 - kFar * (q3 - q1);\n      const farMax = q3 + kFar * (q3 - q1);\n      let outCount = 0;\n      let farCount = 0; // Ich möchte nicht danach filtern da 0 zu kurze und nur zu lange gefiltert werden, aber die wollen wir eigentlich durchaus betrachtetn (pause gemacht, ist schon eine lange Survey)\n\n      _this.filteredResponses = _this.filteredResponses.filter(participant => {\n        // Interview Time in minutes\n        const time = parseFloat(participant['interviewtime']);\n\n        if (time < outMin || time > outMax) {\n          outCount++;\n        }\n\n        if (time < farMin || time > farMax) {\n          farCount++;\n        }\n\n        return true;\n      });\n\n      _this.numbers.set('# Outliers', outCount);\n\n      _this.numbers.set('# Fars', farCount);\n\n      _this.numbers.set('# Responses filtered', _this.filteredResponses.length);\n\n      _this.generateCountMap(_this.filteredResponses, 'G8Q00005');\n\n      _this.generateCountMap(_this.filteredResponses, 'G2Q00004'); // this.generateCountMap(this.filteredResponses, 'G3Q00001');\n      // this.generateCountMap(this.filteredResponses, 'G3Q00002');\n      // this.generateCountMap(this.filteredResponses, 'G3Q00003');\n      // this.generateCountMap(this.filteredResponses, 'G3Q00004');\n      // Anyone in filtered has answered these measures\n\n\n      for (const res of _this.filteredResponses) {\n        _this.bfiCalc(res);\n\n        _this.IMGCalc(res);\n\n        _this.HCICalc(res);\n      } // App Interest can be measured from all\n\n\n      _this.generateAgreementInfo(_this.filteredResponses, 'G7Q00001[SQ001]', 'App Interest');\n\n      _this.generateAgreementInfo(_this.filteredResponses, 'G7Q00001[SQ002]', 'App Interest');\n\n      _this.generateAgreementInfo(_this.filteredResponses, 'G7Q00001[SQ003]', 'App Interest'); // Filter people that didn't name any house rules\n\n\n      _this.houseRuleFilteredResponses = _this.filteredResponses.filter(response => {\n        return response['G5Q00001'] === 'Yes';\n      });\n\n      _this.numbers.set('# House Rule Responses Filtered', _this.houseRuleFilteredResponses.length); // Filter people that were not interested in our app idea\n\n\n      _this.appFilteredResponses = _this.houseRuleFilteredResponses.filter(response => {\n        const positiveNeutralAnswers = ['Agree', 'Somewhat agree', 'Neither agree nor disagree'];\n        let res = positiveNeutralAnswers.some(x => x === response['G7Q00001[SQ001]']);\n        res = res || positiveNeutralAnswers.some(x => x === response['G7Q00001[SQ002]']);\n        res = res || positiveNeutralAnswers.some(x => x === response['G7Q00001[SQ003]']);\n        return res;\n      });\n\n      _this.numbers.set('# App Responses Filtered', _this.appFilteredResponses.length); // House Rule likerts can only be measured from people that answered the house rule prequestion positively\n\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G4Q00001[SQ001]', 'House Rule Interest');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G4Q00001[SQ002]', 'House Rule Interest');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G4Q00001[SQ003]', 'House Rule Interest');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G4Q00001[SQ004]', 'House Rule Interest'); // Feature Statement Likerts\n\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ001]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ002]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ003]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ004]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ005]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ006]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ007]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ008]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ009]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ010]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ011]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ012]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ013]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ014]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ015]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ016]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ017]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ018]', 'Features');\n\n      _this.generateAgreementInfo(_this.appFilteredResponses, 'G8Q00004[SQ019]', 'Features');\n\n      _this.content = 'Main';\n    })();\n  } // downloads a CSV of all codes given, filled by the responses given\n\n\n  downloadTextQuestionCodes() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      let responses = _this2.filteredResponses;\n\n      if (_this2.useAppFiltered) {\n        responses = _this2.appFilteredResponses;\n      }\n\n      if (_this2.useHRFiltered) {\n        responses = _this2.houseRuleFilteredResponses;\n      }\n\n      const codes = _this2.textCodes.split('|');\n\n      let str = '';\n      let header = '';\n\n      for (let x = 0; x < codes.length; x++) {\n        const code = codes[x];\n        header += code;\n        header += x === codes.length - 1 ? '\\n' : ',';\n      }\n\n      str += header;\n\n      for (const response of responses) {\n        for (const code of codes) {\n          const text = response[code];\n\n          if (text === undefined) {\n            debugger;\n          }\n\n          str += '\"' + text.replaceAll('\"', '\\'').replaceAll('#', 'HASH') + '\"';\n          str += ',';\n        }\n\n        str += '\\n';\n      }\n\n      _this2.download('trimmedData.csv', str);\n    })();\n  } // downloads a CSV of all likert translations for codes given\n\n\n  downloadLikertTranslationsCodes() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const codes = _this3.likertCodes.split('|');\n\n      let str = '';\n      let header = '';\n\n      for (let x = 0; x < codes.length; x++) {\n        const code = codes[x];\n        header += code;\n        header += x === codes.length - 1 ? '\\n' : ',';\n      }\n\n      str += header;\n      const allNums = [];\n\n      for (let code of codes) {\n        if (code.indexOf('[') !== -1) {\n          const mapping = _this3.flatLikertMapper.get(code);\n\n          if (mapping === undefined) {\n            debugger;\n          }\n\n          allNums.push(mapping.numbers);\n        } else {// TODO include non likerts here\n        }\n      }\n\n      let sameLength = Math.min(...allNums.map(x => x.length)); // # of lines\n\n      for (let i = 0; i < sameLength; i++) {\n        // # of cols\n        for (let x = 0; x < codes.length; x++) {\n          str += `${allNums[x][i]}${x === codes.length - 1 ? '\\n' : ','}`;\n        }\n      }\n\n      _this3.download('trimmedData.csv', str);\n    })();\n  } // Maybe make this into the DAT format for SPSS\n\n\n  cleanDataAndDownloadCSV() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      let str = '';\n      const headers = Object.entries(_this4.filteredResponses[0]).map(x => x[0]);\n\n      for (const entr of headers) {\n        str += entr;\n        str += ',';\n      }\n\n      str += '\\n';\n\n      for (const res of _this4.filteredResponses) {\n        const variables = Object.entries(res);\n\n        for (const entr of variables) {\n          let adder = '' + entr[1];\n          adder = adder.replace(/(\\r\\n|\\n|\\r)/gm, ''); // adder = adder.replace(',', '\\,');\n\n          str += '\"';\n          str += adder;\n          str += '\"';\n          str += ',';\n        }\n\n        str += '\\n';\n      }\n\n      _this4.download('cleanedData.csv', str);\n    })();\n  } // TODO NEW SCALES WITHOUT DOTS AND 7 SCALE HCI\n\n\n  HCICalc(res) {\n    function parseHCIanswer(answer) {\n      switch (answer) {\n        case 'Strongly disagree':\n          return 1;\n\n        case 'Disagree':\n          return 2;\n\n        case 'Somewhat disagree':\n          return 3;\n\n        case 'Neither agree nor disagree':\n          return 4;\n\n        case 'Somewhat agree':\n          return 5;\n\n        case 'Agree':\n          return 6;\n\n        case 'Strongly Agree':\n          return 7;\n\n        default:\n          return -Infinity;\n      }\n    }\n\n    if (this.HCIMapper.has(res.id)) {\n      console.error('Double HCI calc ' + res.id);\n    }\n\n    const map = new Map();\n    let social = 0;\n    let aesthetic = 0;\n    let narrative = 0;\n    let challenge = 0;\n    let goal = 0;\n    social += parseHCIanswer(res['G11Q00001[SQ001]']);\n    social += 8 - parseHCIanswer(res['G11Q00001[SQ028]']);\n    social += 8 - parseHCIanswer(res['G11Q00001[SQ034]']);\n    social += parseHCIanswer(res['G11Q00001[SQ019]']);\n    social += parseHCIanswer(res['G11Q00001[SQ020]']);\n    social /= 5;\n    social = Math.round(100 * social) / 100;\n    map.set('Social', social);\n    aesthetic += parseHCIanswer(res['G11Q00001[SQ002]']);\n    aesthetic += parseHCIanswer(res['G11Q00001[SQ029]']);\n    aesthetic += parseHCIanswer(res['G11Q00001[SQ030]']);\n    aesthetic += parseHCIanswer(res['G11Q00001[SQ018]']);\n    aesthetic += parseHCIanswer(res['G11Q00001[SQ021]']);\n    aesthetic /= 5;\n    aesthetic = Math.round(100 * aesthetic) / 100;\n    map.set('Aesthetic', aesthetic);\n    narrative += parseHCIanswer(res['G11Q00001[SQ003]']);\n    narrative += parseHCIanswer(res['G11Q00001[SQ025]']);\n    narrative += 8 - parseHCIanswer(res['G11Q00001[SQ031]']);\n    narrative += 8 - parseHCIanswer(res['G11Q00001[SQ016]']);\n    narrative += 8 - parseHCIanswer(res['G11Q00001[SQ023]']);\n    narrative /= 5;\n    narrative = Math.round(100 * narrative) / 100;\n    map.set('Narrative', narrative);\n    challenge += parseHCIanswer(res['G11Q00001[SQ004]']);\n    challenge += parseHCIanswer(res['G11Q00001[SQ026]']);\n    challenge += parseHCIanswer(res['G11Q00001[SQ032]']);\n    challenge += parseHCIanswer(res['G11Q00001[SQ015]']);\n    challenge += parseHCIanswer(res['G11Q00001[SQ024]']);\n    challenge /= 5;\n    challenge = Math.round(100 * challenge) / 100;\n    map.set('Challenge', challenge);\n    goal += 8 - parseHCIanswer(res['G11Q00001[SQ005]']);\n    goal += parseHCIanswer(res['G11Q00001[SQ027]']);\n    goal += parseHCIanswer(res['G11Q00001[SQ033]']);\n    goal += parseHCIanswer(res['G11Q00001[SQ017]']);\n    goal += parseHCIanswer(res['G11Q00001[SQ022]']);\n    goal /= 5;\n    goal = Math.round(100 * goal) / 100;\n    map.set('Goal', goal);\n    this.HCIMapper.set(res.id, map);\n\n    for (const entry of map.entries()) {\n      res[`HCI_${entry[0]}`] = entry[1];\n    }\n  }\n\n  IMGCalc(res) {\n    function parseIMGanswer(answer) {\n      switch (answer) {\n        case 'Completely unimportant':\n          return 1;\n\n        case 'Somewhat unimporant':\n          return 2;\n\n        case 'Neutral':\n          return 3;\n\n        case 'Somewhat important':\n          return 4;\n\n        case 'Very important':\n          return 5;\n\n        default:\n          return -Infinity;\n      }\n    }\n\n    if (this.IMGMapper.has(res.id)) {\n      console.error('Double IMG calc ' + res.id);\n    }\n\n    const map = new Map();\n    let relatedness = 0;\n    let competence = 0;\n    let autonomy = 0;\n    let fun = 0;\n    let immersion = 0;\n    relatedness += parseIMGanswer(res['G10Q00001[SQ001]']);\n    relatedness += parseIMGanswer(res['G10Q00001[SQ002]']);\n    relatedness += parseIMGanswer(res['G10Q00001[SQ003]']);\n    relatedness /= 3;\n    relatedness = Math.round(100 * relatedness) / 100;\n    map.set('Relatedness', relatedness);\n    competence += parseIMGanswer(res['G10Q00001[SQ004]']);\n    competence += parseIMGanswer(res['G10Q00001[SQ005]']);\n    competence += parseIMGanswer(res['G10Q00001[SQ006]']);\n    competence /= 3;\n    competence = Math.round(100 * competence) / 100;\n    map.set('Competence', competence);\n    immersion += parseIMGanswer(res['G10Q00001[SQ007]']);\n    immersion += parseIMGanswer(res['G10Q00001[SQ008]']);\n    immersion += parseIMGanswer(res['G10Q00001[SQ009]']);\n    immersion /= 3;\n    immersion = Math.round(100 * immersion) / 100;\n    map.set('Immersion', immersion);\n    fun += parseIMGanswer(res['G10Q00001[SQ010]']);\n    fun += parseIMGanswer(res['G10Q00001[SQ011]']);\n    fun += parseIMGanswer(res['G10Q00001[SQ012]']);\n    fun /= 3;\n    fun = Math.round(100 * fun) / 100;\n    map.set('Fun', fun);\n    autonomy += parseIMGanswer(res['G10Q00001[SQ013]']);\n    autonomy += parseIMGanswer(res['G10Q00001[SQ014]']);\n    autonomy += parseIMGanswer(res['G10Q00001[SQ015]']);\n    autonomy /= 3;\n    autonomy = Math.round(100 * autonomy) / 100;\n    map.set('Autonomy', autonomy);\n    this.IMGMapper.set(res.id, map);\n\n    for (const entry of map.entries()) {\n      res[`IMG_${entry[0]}`] = entry[1];\n    }\n  }\n\n  generalScalaParser(answer) {\n    switch (answer) {\n      case 'Disagree':\n        return 1;\n\n      case 'Somewhat disagree':\n        return 2;\n\n      case 'Neither agree nor disagree':\n        return 3;\n\n      case 'Somewhat agree':\n        return 4;\n\n      case 'Agree':\n        return 5;\n\n      default:\n        return -Infinity;\n    }\n  }\n\n  bfiCalc(res) {\n    function BFIParser(answer) {\n      switch (answer) {\n        case 'Disagree strongly':\n          return 1;\n\n        case 'Disagree a little':\n          return 2;\n\n        case 'Neither agree nor disagree':\n          return 3;\n\n        case 'Agree a little':\n          return 4;\n\n        case 'Agree strongly':\n          return 5;\n\n        default:\n          return -Infinity;\n      }\n    }\n\n    if (this.bfiMapper.has(res.id)) {\n      console.error('Double BFI calc ' + res.id);\n    }\n\n    const map = new Map();\n    let extraversion = 0;\n    let agreeableness = 0;\n    let conscientiousness = 0;\n    let neuroticism = 0;\n    let openness = 0; // Reverse has to be subtracted from 6\n\n    extraversion += 6 - BFIParser(res['G9Q00001[SQ001]']);\n    extraversion += BFIParser(res['G9Q00001[SQ006]']);\n    extraversion /= 2;\n    extraversion = Math.round(100 * extraversion) / 100;\n    map.set('Extraversion', extraversion);\n    agreeableness += BFIParser(res['G9Q00001[SQ002]']);\n    agreeableness += 6 - BFIParser(res['G9Q00001[SQ007]']);\n    agreeableness += BFIParser(res['G9Q00001[SQ011]']);\n    agreeableness /= 3;\n    agreeableness = Math.round(100 * agreeableness) / 100;\n    map.set('Agreeableness', agreeableness);\n    conscientiousness += 6 - BFIParser(res['G9Q00001[SQ003]']);\n    conscientiousness += BFIParser(res['G9Q00001[SQ008]']);\n    conscientiousness /= 2;\n    conscientiousness = Math.round(100 * conscientiousness) / 100;\n    map.set('Conscientiousness', conscientiousness);\n    neuroticism += 6 - BFIParser(res['G9Q00001[SQ004]']);\n    neuroticism += BFIParser(res['G9Q00001[SQ009]']);\n    neuroticism /= 2;\n    neuroticism = Math.round(100 * neuroticism) / 100;\n    map.set('Neuroticism', neuroticism);\n    openness += 6 - BFIParser(res['G9Q00001[SQ005]']);\n    openness += BFIParser(res['G9Q00001[SQ010]']);\n    openness /= 2;\n    openness = Math.round(100 * openness) / 100;\n    map.set('Openness', openness);\n    this.bfiMapper.set(res.id, map);\n\n    for (const entry of map.entries()) {\n      res[`BFI_${entry[0]}`] = entry[1];\n    }\n  }\n\n  addCountOutput(target, source, qc) {\n    for (const entry of source) {\n      target.set(qc + ': ' + entry[0], entry[1]);\n    }\n  }\n\n  generateCountMap(participants, qc) {\n    const map = new Map();\n\n    for (const part of participants) {\n      const val = part[qc];\n\n      if (map.has(val)) {\n        map.set(val, map.get(val) + 1);\n      } else {\n        map.set(val, 1);\n      }\n    }\n\n    for (const entry of map.entries()) {\n      map.set(entry[0], Math.round(100 * (entry[1] / participants.length) * 100) / 100);\n    }\n\n    this.addCountOutput(this.numbers, map, qc);\n    this.codeMapper.set(qc, map);\n  } // only use this with agreement scales\n\n\n  generateAgreementInfo(responses, qc, key) {\n    if (!this.likertMapper.has(key)) {\n      this.likertMapper.set(key, new Map());\n    }\n\n    const agr = {\n      mean: -Infinity,\n      median: -Infinity,\n      variance: -Infinity,\n      size: -Infinity,\n      dev: -Infinity,\n      agreement: -Infinity,\n      ttest: -Infinity,\n      significant: false,\n      numbers: []\n    };\n    let agreers = 0;\n    const numbers = [];\n    let mean = 0;\n\n    for (const res of responses) {\n      if (res[qc] === '') {\n        console.log(res);\n      }\n\n      const num = this.generalScalaParser(res[qc]);\n      numbers.push(num);\n      mean += num;\n\n      if (num >= 4) {\n        agreers++;\n      }\n    }\n\n    mean /= responses.length;\n    agr.mean = Math.round(mean * 100) / 100;\n    agr.median = Math.round(ss.median(numbers) * 100) / 100;\n    agr.agreement = Math.round(agreers / responses.length * 100) / 100;\n    agr.variance = ss.variance(numbers);\n    agr.dev = Math.round(Math.sqrt(agr.variance) * 100) / 100;\n    agr.size = numbers.length;\n    agr.ttest = ss.tTest(numbers, 3);\n    agr.numbers = numbers; // This is for sample size 60\n\n    let pVal = 1.671;\n\n    if (numbers.length > 120) {\n      pVal = 1.658;\n    }\n\n    if (numbers.length > 1000) {\n      pVal = 1.646;\n    }\n\n    if (numbers.length > 2000) {\n      pVal = 1.645;\n    }\n\n    agr.significant = Math.abs(agr.ttest) > pVal;\n\n    if (questionCodeToNameMapper.has(qc)) {\n      this.likertMapper.get(key).set(questionCodeToNameMapper.get(qc), agr);\n    } else {\n      this.likertMapper.get(key).set(qc, agr);\n    }\n\n    this.flatLikertMapper.set(qc, agr);\n  }\n\n  download(filename, content) {\n    const element = document.createElement('a');\n    element.setAttribute('href', 'data:text/csv;charset=utf-8,' + content);\n    element.setAttribute('download', filename);\n    document.body.appendChild(element);\n    element.click();\n    document.body.removeChild(element);\n  }\n\n}\n\nAnalysisComponent.ɵfac = function AnalysisComponent_Factory(t) {\n  return new (t || AnalysisComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nAnalysisComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AnalysisComponent,\n  selectors: [[\"app-analysis\"]],\n  decls: 15,\n  vars: 12,\n  consts: [[1, \"content\", \"row\", \"pt-2\"], [1, \"col-12\", \"d-flex\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"col-12\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"col-12\"], [1, \"row\", \"mt-3\"], [1, \"col-3\"], [\"type\", \"text\", 1, \"col-6\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-3\", 3, \"click\"], [1, \"col-6\"], [1, \"row\"], [\"type\", \"text\", 1, \"col-12\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mr-5\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"index\", \"title\", \"map\"], [\"class\", \"col-12 mb-5\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"mb-5\"], [2, \"color\", \"#ff8f00\"], [1, \"col-4\"]],\n  template: function AnalysisComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AnalysisComponent_Template_button_click_2_listener() {\n        return ctx.content = \"Main\";\n      });\n      i0.ɵɵtext(3, \" Main \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AnalysisComponent_Template_button_click_4_listener() {\n        return ctx.content = \"Likerts\";\n      });\n      i0.ɵɵtext(5, \" Likerts \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AnalysisComponent_Template_button_click_6_listener() {\n        return ctx.content = \"Measures\";\n      });\n      i0.ɵɵtext(7, \" Measures \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AnalysisComponent_Template_button_click_8_listener() {\n        return ctx.content = \"Downloads\";\n      });\n      i0.ɵɵtext(9, \" Downloads \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, AnalysisComponent_div_10_Template, 22, 4, \"div\", 3);\n      i0.ɵɵtemplate(11, AnalysisComponent_div_11_Template, 4, 4, \"div\", 3);\n      i0.ɵɵelement(12, \"hr\");\n      i0.ɵɵtemplate(13, AnalysisComponent_ng_container_13_Template, 8, 4, \"ng-container\", 4);\n      i0.ɵɵtemplate(14, AnalysisComponent_ng_container_14_Template, 2, 1, \"ng-container\", 4);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.content === \"Main\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.content === \"Likerts\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.content === \"Measures\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵclassProp(\"active\", ctx.content === \"Downloads\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.content === \"Downloads\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.content === \"Main\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.content === \"Likerts\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.content === \"Measures\");\n    }\n  },\n  directives: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatCheckbox, i2.NgForOf, i5.LikertDisplayComponent],\n  pipes: [i2.KeyValuePipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbmFseXNpcy5jb21wb25lbnQuc2NzcyJ9 */\"]\n});","map":{"version":3,"sources":["C:/Users/chris/Documents/TS/Christopher-BA/house-rule-platform/src/app/analysis/analysis.component.ts"],"names":["d3","blacklist","originalOrder","questionCodeToNameMapper","ss","i0","i1","i2","i3","i4","i5","AnalysisComponent_div_10_Template","rf","ctx","_r5","ɵɵgetCurrentView","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","AnalysisComponent_div_10_Template_input_ngModelChange_4_listener","$event","ɵɵrestoreView","ctx_r4","ɵɵnextContext","likertCodes","AnalysisComponent_div_10_Template_button_click_5_listener","ctx_r6","downloadLikertTranslationsCodes","AnalysisComponent_div_10_Template_input_ngModelChange_12_listener","ctx_r7","textCodes","AnalysisComponent_div_10_Template_mat_checkbox_ngModelChange_16_listener","ctx_r8","useAppFiltered","AnalysisComponent_div_10_Template_mat_checkbox_ngModelChange_19_listener","ctx_r9","useHRFiltered","AnalysisComponent_div_10_Template_button_click_20_listener","ctx_r10","downloadTextQuestionCodes","ctx_r0","ɵɵadvance","ɵɵproperty","AnalysisComponent_div_11_li_2_Template","pair_r12","$implicit","ɵɵtextInterpolate2","key","value","AnalysisComponent_div_11_Template","ɵɵtemplate","ɵɵpipe","ctx_r1","ɵɵpipeBind2","numbers","AnalysisComponent_ng_container_13_ng_container_6_Template","ɵɵelementContainerStart","ɵɵelement","ɵɵelementContainerEnd","keyVal_r14","i_r15","index","AnalysisComponent_ng_container_13_Template","ctx_r2","likertMapper","AnalysisComponent_ng_container_14_div_1_li_8_Template","trait_r21","AnalysisComponent_ng_container_14_div_1_li_14_Template","trait_r22","AnalysisComponent_ng_container_14_div_1_li_20_Template","trait_r23","AnalysisComponent_ng_container_14_div_1_Template","res_r17","ctx_r16","ɵɵtextInterpolate","id","bfiMapper","get","IMGMapper","HCIMapper","AnalysisComponent_ng_container_14_Template","ctx_r3","filteredResponses","AnalysisComponent","constructor","httpClient","Map","codeMapper","flatLikertMapper","ngOnInit","readData","res","csv","participants","r","some","bannedID","push","set","length","filter","participant","times","map","x","parseFloat","interviewtime","q1","quantile","q3","kOut","kFar","outMin","outMax","farMin","farMax","outCount","farCount","time","generateCountMap","bfiCalc","IMGCalc","HCICalc","generateAgreementInfo","houseRuleFilteredResponses","response","appFilteredResponses","positiveNeutralAnswers","content","responses","codes","split","str","header","code","text","undefined","replaceAll","download","allNums","indexOf","mapping","sameLength","Math","min","i","cleanDataAndDownloadCSV","headers","Object","entries","entr","variables","adder","replace","parseHCIanswer","answer","Infinity","has","console","error","social","aesthetic","narrative","challenge","goal","round","entry","parseIMGanswer","relatedness","competence","autonomy","fun","immersion","generalScalaParser","BFIParser","extraversion","agreeableness","conscientiousness","neuroticism","openness","addCountOutput","target","source","qc","part","val","agr","mean","median","variance","size","dev","agreement","ttest","significant","agreers","log","num","sqrt","tTest","pVal","abs","filename","element","document","createElement","setAttribute","body","appendChild","click","removeChild","ɵfac","AnalysisComponent_Factory","t","ɵɵdirectiveInject","HttpClient","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","AnalysisComponent_Template","AnalysisComponent_Template_button_click_2_listener","AnalysisComponent_Template_button_click_4_listener","AnalysisComponent_Template_button_click_6_listener","AnalysisComponent_Template_button_click_8_listener","ɵɵclassProp","directives","NgIf","DefaultValueAccessor","NgControlStatus","NgModel","MatCheckbox","NgForOf","LikertDisplayComponent","pipes","KeyValuePipe","styles"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\r\nimport { blacklist, originalOrder, questionCodeToNameMapper } from '../../assets/Data/Data';\r\nimport * as ss from 'simple-statistics';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nimport * as i2 from \"@angular/common\";\r\nimport * as i3 from \"@angular/forms\";\r\nimport * as i4 from \"@angular/material/checkbox\";\r\nimport * as i5 from \"../likert-display/likert-display.component\";\r\nfunction AnalysisComponent_div_10_Template(rf, ctx) { if (rf & 1) {\r\n    const _r5 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"div\", 6)(2, \"label\", 7);\r\n    i0.ɵɵtext(3, \" Likert Subquestion Codes \");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(4, \"input\", 8);\r\n    i0.ɵɵlistener(\"ngModelChange\", function AnalysisComponent_div_10_Template_input_ngModelChange_4_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r4 = i0.ɵɵnextContext(); return ctx_r4.likertCodes = $event; });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(5, \"button\", 9);\r\n    i0.ɵɵlistener(\"click\", function AnalysisComponent_div_10_Template_button_click_5_listener() { i0.ɵɵrestoreView(_r5); const ctx_r6 = i0.ɵɵnextContext(); return ctx_r6.downloadLikertTranslationsCodes(); });\r\n    i0.ɵɵtext(6, \" Likert Subquestion Download \");\r\n    i0.ɵɵelementEnd()();\r\n    i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\r\n    i0.ɵɵtext(9, \" Text Question Codes \");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(10, \"div\", 10)(11, \"div\", 11)(12, \"input\", 12);\r\n    i0.ɵɵlistener(\"ngModelChange\", function AnalysisComponent_div_10_Template_input_ngModelChange_12_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r7 = i0.ɵɵnextContext(); return ctx_r7.textCodes = $event; });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(13, \"div\", 5)(14, \"label\");\r\n    i0.ɵɵtext(15, \" APP \");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(16, \"mat-checkbox\", 13);\r\n    i0.ɵɵlistener(\"ngModelChange\", function AnalysisComponent_div_10_Template_mat_checkbox_ngModelChange_16_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r8 = i0.ɵɵnextContext(); return ctx_r8.useAppFiltered = $event; });\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(17, \"label\");\r\n    i0.ɵɵtext(18, \" HR \");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(19, \"mat-checkbox\", 14);\r\n    i0.ɵɵlistener(\"ngModelChange\", function AnalysisComponent_div_10_Template_mat_checkbox_ngModelChange_19_listener($event) { i0.ɵɵrestoreView(_r5); const ctx_r9 = i0.ɵɵnextContext(); return ctx_r9.useHRFiltered = $event; });\r\n    i0.ɵɵelementEnd()()()();\r\n    i0.ɵɵelementStart(20, \"button\", 9);\r\n    i0.ɵɵlistener(\"click\", function AnalysisComponent_div_10_Template_button_click_20_listener() { i0.ɵɵrestoreView(_r5); const ctx_r10 = i0.ɵɵnextContext(); return ctx_r10.downloadTextQuestionCodes(); });\r\n    i0.ɵɵtext(21, \" Test Question Download \");\r\n    i0.ɵɵelementEnd()()();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(4);\r\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.likertCodes);\r\n    i0.ɵɵadvance(8);\r\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.textCodes);\r\n    i0.ɵɵadvance(4);\r\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.useAppFiltered);\r\n    i0.ɵɵadvance(3);\r\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.useHRFiltered);\r\n} }\r\nfunction AnalysisComponent_div_11_li_2_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"li\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const pair_r12 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate2(\" \", pair_r12.key, \": \", pair_r12.value, \" \");\r\n} }\r\nfunction AnalysisComponent_div_11_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 5)(1, \"ul\");\r\n    i0.ɵɵtemplate(2, AnalysisComponent_div_11_li_2_Template, 2, 2, \"li\", 15);\r\n    i0.ɵɵpipe(3, \"keyvalue\");\r\n    i0.ɵɵelementEnd()();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(3, 1, ctx_r1.numbers, ctx_r1.originalOrder));\r\n} }\r\nfunction AnalysisComponent_ng_container_13_ng_container_6_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵelement(1, \"app-likert-display\", 16)(2, \"hr\");\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const keyVal_r14 = ctx.$implicit;\r\n    const i_r15 = ctx.index;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"index\", i_r15)(\"title\", keyVal_r14.key)(\"map\", keyVal_r14.value);\r\n} }\r\nfunction AnalysisComponent_ng_container_13_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵelementStart(1, \"div\", 5)(2, \"h3\");\r\n    i0.ɵɵtext(3, \"Mean Compares and Correlations\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(4, \"p\");\r\n    i0.ɵɵtext(5, \" There was not a significant relationship between how much the participants' liked creating house rules and their interest in sharing their house rules on the platform, r = -0.97, p = 0.62. \");\r\n    i0.ɵɵelementEnd()();\r\n    i0.ɵɵtemplate(6, AnalysisComponent_ng_container_13_ng_container_6_Template, 3, 3, \"ng-container\", 15);\r\n    i0.ɵɵpipe(7, \"keyvalue\");\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r2 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(6);\r\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(7, 1, ctx_r2.likertMapper, ctx_r2.originalOrder));\r\n} }\r\nfunction AnalysisComponent_ng_container_14_div_1_li_8_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"li\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const trait_r21 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate2(\" \", trait_r21.key, \": \", trait_r21.value, \" \");\r\n} }\r\nfunction AnalysisComponent_ng_container_14_div_1_li_14_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"li\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const trait_r22 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate2(\" \", trait_r22.key, \": \", trait_r22.value, \" \");\r\n} }\r\nfunction AnalysisComponent_ng_container_14_div_1_li_20_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"li\");\r\n    i0.ɵɵtext(1);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const trait_r23 = ctx.$implicit;\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵtextInterpolate2(\" \", trait_r23.key, \": \", trait_r23.value, \" \");\r\n} }\r\nfunction AnalysisComponent_ng_container_14_div_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"h2\", 19);\r\n    i0.ɵɵtext(2);\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(3, \"div\", 11)(4, \"div\", 20)(5, \"h4\");\r\n    i0.ɵɵtext(6, \" BFI \");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(7, \"ul\");\r\n    i0.ɵɵtemplate(8, AnalysisComponent_ng_container_14_div_1_li_8_Template, 2, 2, \"li\", 15);\r\n    i0.ɵɵpipe(9, \"keyvalue\");\r\n    i0.ɵɵelementEnd()();\r\n    i0.ɵɵelementStart(10, \"div\", 20)(11, \"h4\");\r\n    i0.ɵɵtext(12, \" IMG \");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(13, \"ul\");\r\n    i0.ɵɵtemplate(14, AnalysisComponent_ng_container_14_div_1_li_14_Template, 2, 2, \"li\", 15);\r\n    i0.ɵɵpipe(15, \"keyvalue\");\r\n    i0.ɵɵelementEnd()();\r\n    i0.ɵɵelementStart(16, \"div\", 20)(17, \"h4\");\r\n    i0.ɵɵtext(18, \" HCI \");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(19, \"ul\");\r\n    i0.ɵɵtemplate(20, AnalysisComponent_ng_container_14_div_1_li_20_Template, 2, 2, \"li\", 15);\r\n    i0.ɵɵpipe(21, \"keyvalue\");\r\n    i0.ɵɵelementEnd()()()();\r\n} if (rf & 2) {\r\n    const res_r17 = ctx.$implicit;\r\n    const ctx_r16 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵadvance(2);\r\n    i0.ɵɵtextInterpolate(res_r17.id);\r\n    i0.ɵɵadvance(6);\r\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(9, 4, ctx_r16.bfiMapper.get(res_r17.id), ctx_r16.originalOrder));\r\n    i0.ɵɵadvance(6);\r\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(15, 7, ctx_r16.IMGMapper.get(res_r17.id), ctx_r16.originalOrder));\r\n    i0.ɵɵadvance(6);\r\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind2(21, 10, ctx_r16.HCIMapper.get(res_r17.id), ctx_r16.originalOrder));\r\n} }\r\nfunction AnalysisComponent_ng_container_14_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementContainerStart(0);\r\n    i0.ɵɵtemplate(1, AnalysisComponent_ng_container_14_div_1_Template, 22, 13, \"div\", 17);\r\n    i0.ɵɵelementContainerEnd();\r\n} if (rf & 2) {\r\n    const ctx_r3 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.filteredResponses);\r\n} }\r\nexport class AnalysisComponent {\r\n    constructor(httpClient) {\r\n        this.httpClient = httpClient;\r\n        this.originalOrder = originalOrder;\r\n        // display string to any for html\r\n        this.numbers = new Map();\r\n        // Question Code to map of answer option to count\r\n        this.codeMapper = new Map();\r\n        // Participant ID to Map of trait name to score\r\n        this.bfiMapper = new Map();\r\n        // Participant ID to Map of trait name to score\r\n        this.IMGMapper = new Map();\r\n        // Participant ID to Map of trait name to score\r\n        this.HCIMapper = new Map();\r\n        // likert mapper\r\n        this.likertMapper = new Map();\r\n        // Flat likert mapper\r\n        this.flatLikertMapper = new Map();\r\n    }\r\n    ngOnInit() {\r\n        this.readData();\r\n    }\r\n    async readData() {\r\n        const res = await d3.csv('./../assets/Data/dailyData.csv');\r\n        let participants = [];\r\n        for (let r of res) {\r\n            // Remove potential empty lines and remove blacklisted participants\r\n            if (r['id'] !== '' && !blacklist.some(bannedID => bannedID === r['id'])) {\r\n                participants.push(r);\r\n            }\r\n        }\r\n        this.numbers.set('# Responses', participants.length);\r\n        this.filteredResponses = participants;\r\n        // Remove the ones that don't want their data used\r\n        this.filteredResponses = participants.filter(participant => {\r\n            return participant['G12Q00002'] === 'Yes';\r\n        });\r\n        // Remove the ones that skipped the survey\r\n        this.filteredResponses = this.filteredResponses.filter(participant => {\r\n            return participant['G2Q00005'] !== 'Skip to the end and get the asset pack';\r\n        });\r\n        // Remove the ones that answered they don't play any board games\r\n        this.filteredResponses = this.filteredResponses.filter(participant => {\r\n            return !(participant['G3Q00002'] === 'Never' && participant['G3Q00003'] === 'No');\r\n        });\r\n        // function filterHelper(length: number, participant: Response, code: string, filled: boolean): boolean {\r\n        //   for (let i = 1; i <= length; i++) {\r\n        //     let qc;\r\n        //     if (i < 10) {\r\n        //       qc = code + `[SQ00${i}]`;\r\n        //     } else {\r\n        //       qc = code + `[SQ0${i}]`;\r\n        //     }\r\n        //     filled = filled && !(participant[qc] === '' || participant[qc] === 'N/A');\r\n        //   }\r\n        //   return filled;\r\n        // }\r\n        // Remove the ones that somehow didn't fill out measures\r\n        // this.filteredResponses = this.filteredResponses.filter(participant => {\r\n        //   let filled = true;\r\n        //\r\n        //   const lengthBFI = 11;\r\n        //   const g9Q00001 = 'G9Q00001';\r\n        //\r\n        //   filled = filterHelper(lengthBFI, participant, g9Q00001, filled);\r\n        //\r\n        //   const lengthIMG = 15;\r\n        //   const codeImg = 'G10Q00001';\r\n        //\r\n        //   filled = filterHelper(lengthIMG, participant, codeImg, filled);\r\n        //\r\n        //\r\n        //   const lengthAppFeatures = 19;\r\n        //   const codeAppFeatures = 'G8Q00004';\r\n        //\r\n        //   filled = filterHelper(lengthAppFeatures, participant, codeAppFeatures, filled);\r\n        //\r\n        //   return filled;\r\n        //\r\n        // });\r\n        // Remove the ones that were too fast or slow\r\n        const times = this.filteredResponses.map(x => parseFloat(x.interviewtime));\r\n        const q1 = ss.quantile(times, 0.25);\r\n        const q3 = ss.quantile(times, 0.75);\r\n        const kOut = 1.5;\r\n        const kFar = 3;\r\n        const outMin = q1 - kOut * (q3 - q1);\r\n        const outMax = q3 + kOut * (q3 - q1);\r\n        const farMin = q1 - kFar * (q3 - q1);\r\n        const farMax = q3 + kFar * (q3 - q1);\r\n        let outCount = 0;\r\n        let farCount = 0;\r\n        // Ich möchte nicht danach filtern da 0 zu kurze und nur zu lange gefiltert werden, aber die wollen wir eigentlich durchaus betrachtetn (pause gemacht, ist schon eine lange Survey)\r\n        this.filteredResponses = this.filteredResponses.filter(participant => {\r\n            // Interview Time in minutes\r\n            const time = parseFloat(participant['interviewtime']);\r\n            if (time < outMin || time > outMax) {\r\n                outCount++;\r\n            }\r\n            if (time < farMin || time > farMax) {\r\n                farCount++;\r\n            }\r\n            return true;\r\n        });\r\n        this.numbers.set('# Outliers', outCount);\r\n        this.numbers.set('# Fars', farCount);\r\n        this.numbers.set('# Responses filtered', this.filteredResponses.length);\r\n        this.generateCountMap(this.filteredResponses, 'G8Q00005');\r\n        this.generateCountMap(this.filteredResponses, 'G2Q00004');\r\n        // this.generateCountMap(this.filteredResponses, 'G3Q00001');\r\n        // this.generateCountMap(this.filteredResponses, 'G3Q00002');\r\n        // this.generateCountMap(this.filteredResponses, 'G3Q00003');\r\n        // this.generateCountMap(this.filteredResponses, 'G3Q00004');\r\n        // Anyone in filtered has answered these measures\r\n        for (const res of this.filteredResponses) {\r\n            this.bfiCalc(res);\r\n            this.IMGCalc(res);\r\n            this.HCICalc(res);\r\n        }\r\n        // App Interest can be measured from all\r\n        this.generateAgreementInfo(this.filteredResponses, 'G7Q00001[SQ001]', 'App Interest');\r\n        this.generateAgreementInfo(this.filteredResponses, 'G7Q00001[SQ002]', 'App Interest');\r\n        this.generateAgreementInfo(this.filteredResponses, 'G7Q00001[SQ003]', 'App Interest');\r\n        // Filter people that didn't name any house rules\r\n        this.houseRuleFilteredResponses = this.filteredResponses.filter(response => {\r\n            return response['G5Q00001'] === 'Yes';\r\n        });\r\n        this.numbers.set('# House Rule Responses Filtered', this.houseRuleFilteredResponses.length);\r\n        // Filter people that were not interested in our app idea\r\n        this.appFilteredResponses = this.houseRuleFilteredResponses.filter(response => {\r\n            const positiveNeutralAnswers = ['Agree', 'Somewhat agree', 'Neither agree nor disagree'];\r\n            let res = positiveNeutralAnswers.some(x => x === response['G7Q00001[SQ001]']);\r\n            res = res || positiveNeutralAnswers.some(x => x === response['G7Q00001[SQ002]']);\r\n            res = res || positiveNeutralAnswers.some(x => x === response['G7Q00001[SQ003]']);\r\n            return res;\r\n        });\r\n        this.numbers.set('# App Responses Filtered', this.appFilteredResponses.length);\r\n        // House Rule likerts can only be measured from people that answered the house rule prequestion positively\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G4Q00001[SQ001]', 'House Rule Interest');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G4Q00001[SQ002]', 'House Rule Interest');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G4Q00001[SQ003]', 'House Rule Interest');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G4Q00001[SQ004]', 'House Rule Interest');\r\n        // Feature Statement Likerts\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ001]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ002]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ003]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ004]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ005]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ006]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ007]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ008]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ009]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ010]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ011]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ012]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ013]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ014]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ015]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ016]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ017]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ018]', 'Features');\r\n        this.generateAgreementInfo(this.appFilteredResponses, 'G8Q00004[SQ019]', 'Features');\r\n        this.content = 'Main';\r\n    }\r\n    // downloads a CSV of all codes given, filled by the responses given\r\n    async downloadTextQuestionCodes() {\r\n        let responses = this.filteredResponses;\r\n        if (this.useAppFiltered) {\r\n            responses = this.appFilteredResponses;\r\n        }\r\n        if (this.useHRFiltered) {\r\n            responses = this.houseRuleFilteredResponses;\r\n        }\r\n        const codes = this.textCodes.split('|');\r\n        let str = '';\r\n        let header = '';\r\n        for (let x = 0; x < codes.length; x++) {\r\n            const code = codes[x];\r\n            header += code;\r\n            header += x === codes.length - 1 ? '\\n' : ',';\r\n        }\r\n        str += header;\r\n        for (const response of responses) {\r\n            for (const code of codes) {\r\n                const text = response[code];\r\n                if (text === undefined) {\r\n                    debugger;\r\n                }\r\n                str += '\"' + text.replaceAll('\"', '\\'').replaceAll('#', 'HASH') + '\"';\r\n                str += ',';\r\n            }\r\n            str += '\\n';\r\n        }\r\n        this.download('trimmedData.csv', str);\r\n    }\r\n    // downloads a CSV of all likert translations for codes given\r\n    async downloadLikertTranslationsCodes() {\r\n        const codes = this.likertCodes.split('|');\r\n        let str = '';\r\n        let header = '';\r\n        for (let x = 0; x < codes.length; x++) {\r\n            const code = codes[x];\r\n            header += code;\r\n            header += x === codes.length - 1 ? '\\n' : ',';\r\n        }\r\n        str += header;\r\n        const allNums = [];\r\n        for (let code of codes) {\r\n            if (code.indexOf('[') !== -1) {\r\n                const mapping = this.flatLikertMapper.get(code);\r\n                if (mapping === undefined) {\r\n                    debugger;\r\n                }\r\n                allNums.push(mapping.numbers);\r\n            }\r\n            else {\r\n                // TODO include non likerts here\r\n            }\r\n        }\r\n        let sameLength = Math.min(...allNums.map(x => x.length));\r\n        // # of lines\r\n        for (let i = 0; i < sameLength; i++) {\r\n            // # of cols\r\n            for (let x = 0; x < codes.length; x++) {\r\n                str += `${allNums[x][i]}${x === codes.length - 1 ? '\\n' : ','}`;\r\n            }\r\n        }\r\n        this.download('trimmedData.csv', str);\r\n    }\r\n    // Maybe make this into the DAT format for SPSS\r\n    async cleanDataAndDownloadCSV() {\r\n        let str = '';\r\n        const headers = Object.entries(this.filteredResponses[0]).map(x => x[0]);\r\n        for (const entr of headers) {\r\n            str += entr;\r\n            str += ',';\r\n        }\r\n        str += '\\n';\r\n        for (const res of this.filteredResponses) {\r\n            const variables = Object.entries(res);\r\n            for (const entr of variables) {\r\n                let adder = ('' + entr[1]);\r\n                adder = adder.replace(/(\\r\\n|\\n|\\r)/gm, '');\r\n                // adder = adder.replace(',', '\\,');\r\n                str += '\"';\r\n                str += adder;\r\n                str += '\"';\r\n                str += ',';\r\n            }\r\n            str += '\\n';\r\n        }\r\n        this.download('cleanedData.csv', str);\r\n    }\r\n    // TODO NEW SCALES WITHOUT DOTS AND 7 SCALE HCI\r\n    HCICalc(res) {\r\n        function parseHCIanswer(answer) {\r\n            switch (answer) {\r\n                case 'Strongly disagree':\r\n                    return 1;\r\n                case 'Disagree':\r\n                    return 2;\r\n                case 'Somewhat disagree':\r\n                    return 3;\r\n                case 'Neither agree nor disagree':\r\n                    return 4;\r\n                case 'Somewhat agree':\r\n                    return 5;\r\n                case 'Agree':\r\n                    return 6;\r\n                case 'Strongly Agree':\r\n                    return 7;\r\n                default:\r\n                    return -Infinity;\r\n            }\r\n        }\r\n        if (this.HCIMapper.has(res.id)) {\r\n            console.error('Double HCI calc ' + res.id);\r\n        }\r\n        const map = new Map();\r\n        let social = 0;\r\n        let aesthetic = 0;\r\n        let narrative = 0;\r\n        let challenge = 0;\r\n        let goal = 0;\r\n        social += parseHCIanswer(res['G11Q00001[SQ001]']);\r\n        social += 8 - parseHCIanswer(res['G11Q00001[SQ028]']);\r\n        social += 8 - parseHCIanswer(res['G11Q00001[SQ034]']);\r\n        social += parseHCIanswer(res['G11Q00001[SQ019]']);\r\n        social += parseHCIanswer(res['G11Q00001[SQ020]']);\r\n        social /= 5;\r\n        social = Math.round(100 * social) / 100;\r\n        map.set('Social', social);\r\n        aesthetic += parseHCIanswer(res['G11Q00001[SQ002]']);\r\n        aesthetic += parseHCIanswer(res['G11Q00001[SQ029]']);\r\n        aesthetic += parseHCIanswer(res['G11Q00001[SQ030]']);\r\n        aesthetic += parseHCIanswer(res['G11Q00001[SQ018]']);\r\n        aesthetic += parseHCIanswer(res['G11Q00001[SQ021]']);\r\n        aesthetic /= 5;\r\n        aesthetic = Math.round(100 * aesthetic) / 100;\r\n        map.set('Aesthetic', aesthetic);\r\n        narrative += parseHCIanswer(res['G11Q00001[SQ003]']);\r\n        narrative += parseHCIanswer(res['G11Q00001[SQ025]']);\r\n        narrative += 8 - parseHCIanswer(res['G11Q00001[SQ031]']);\r\n        narrative += 8 - parseHCIanswer(res['G11Q00001[SQ016]']);\r\n        narrative += 8 - parseHCIanswer(res['G11Q00001[SQ023]']);\r\n        narrative /= 5;\r\n        narrative = Math.round(100 * narrative) / 100;\r\n        map.set('Narrative', narrative);\r\n        challenge += parseHCIanswer(res['G11Q00001[SQ004]']);\r\n        challenge += parseHCIanswer(res['G11Q00001[SQ026]']);\r\n        challenge += parseHCIanswer(res['G11Q00001[SQ032]']);\r\n        challenge += parseHCIanswer(res['G11Q00001[SQ015]']);\r\n        challenge += parseHCIanswer(res['G11Q00001[SQ024]']);\r\n        challenge /= 5;\r\n        challenge = Math.round(100 * challenge) / 100;\r\n        map.set('Challenge', challenge);\r\n        goal += 8 - parseHCIanswer(res['G11Q00001[SQ005]']);\r\n        goal += parseHCIanswer(res['G11Q00001[SQ027]']);\r\n        goal += parseHCIanswer(res['G11Q00001[SQ033]']);\r\n        goal += parseHCIanswer(res['G11Q00001[SQ017]']);\r\n        goal += parseHCIanswer(res['G11Q00001[SQ022]']);\r\n        goal /= 5;\r\n        goal = Math.round(100 * goal) / 100;\r\n        map.set('Goal', goal);\r\n        this.HCIMapper.set(res.id, map);\r\n        for (const entry of map.entries()) {\r\n            res[`HCI_${entry[0]}`] = entry[1];\r\n        }\r\n    }\r\n    IMGCalc(res) {\r\n        function parseIMGanswer(answer) {\r\n            switch (answer) {\r\n                case 'Completely unimportant':\r\n                    return 1;\r\n                case 'Somewhat unimporant':\r\n                    return 2;\r\n                case 'Neutral':\r\n                    return 3;\r\n                case 'Somewhat important':\r\n                    return 4;\r\n                case 'Very important':\r\n                    return 5;\r\n                default:\r\n                    return -Infinity;\r\n            }\r\n        }\r\n        if (this.IMGMapper.has(res.id)) {\r\n            console.error('Double IMG calc ' + res.id);\r\n        }\r\n        const map = new Map();\r\n        let relatedness = 0;\r\n        let competence = 0;\r\n        let autonomy = 0;\r\n        let fun = 0;\r\n        let immersion = 0;\r\n        relatedness += parseIMGanswer(res['G10Q00001[SQ001]']);\r\n        relatedness += parseIMGanswer(res['G10Q00001[SQ002]']);\r\n        relatedness += parseIMGanswer(res['G10Q00001[SQ003]']);\r\n        relatedness /= 3;\r\n        relatedness = Math.round(100 * relatedness) / 100;\r\n        map.set('Relatedness', relatedness);\r\n        competence += parseIMGanswer(res['G10Q00001[SQ004]']);\r\n        competence += parseIMGanswer(res['G10Q00001[SQ005]']);\r\n        competence += parseIMGanswer(res['G10Q00001[SQ006]']);\r\n        competence /= 3;\r\n        competence = Math.round(100 * competence) / 100;\r\n        map.set('Competence', competence);\r\n        immersion += parseIMGanswer(res['G10Q00001[SQ007]']);\r\n        immersion += parseIMGanswer(res['G10Q00001[SQ008]']);\r\n        immersion += parseIMGanswer(res['G10Q00001[SQ009]']);\r\n        immersion /= 3;\r\n        immersion = Math.round(100 * immersion) / 100;\r\n        map.set('Immersion', immersion);\r\n        fun += parseIMGanswer(res['G10Q00001[SQ010]']);\r\n        fun += parseIMGanswer(res['G10Q00001[SQ011]']);\r\n        fun += parseIMGanswer(res['G10Q00001[SQ012]']);\r\n        fun /= 3;\r\n        fun = Math.round(100 * fun) / 100;\r\n        map.set('Fun', fun);\r\n        autonomy += parseIMGanswer(res['G10Q00001[SQ013]']);\r\n        autonomy += parseIMGanswer(res['G10Q00001[SQ014]']);\r\n        autonomy += parseIMGanswer(res['G10Q00001[SQ015]']);\r\n        autonomy /= 3;\r\n        autonomy = Math.round(100 * autonomy) / 100;\r\n        map.set('Autonomy', autonomy);\r\n        this.IMGMapper.set(res.id, map);\r\n        for (const entry of map.entries()) {\r\n            res[`IMG_${entry[0]}`] = entry[1];\r\n        }\r\n    }\r\n    generalScalaParser(answer) {\r\n        switch (answer) {\r\n            case 'Disagree':\r\n                return 1;\r\n            case 'Somewhat disagree':\r\n                return 2;\r\n            case 'Neither agree nor disagree':\r\n                return 3;\r\n            case 'Somewhat agree':\r\n                return 4;\r\n            case 'Agree':\r\n                return 5;\r\n            default:\r\n                return -Infinity;\r\n        }\r\n    }\r\n    bfiCalc(res) {\r\n        function BFIParser(answer) {\r\n            switch (answer) {\r\n                case 'Disagree strongly':\r\n                    return 1;\r\n                case 'Disagree a little':\r\n                    return 2;\r\n                case 'Neither agree nor disagree':\r\n                    return 3;\r\n                case 'Agree a little':\r\n                    return 4;\r\n                case 'Agree strongly':\r\n                    return 5;\r\n                default:\r\n                    return -Infinity;\r\n            }\r\n        }\r\n        if (this.bfiMapper.has(res.id)) {\r\n            console.error('Double BFI calc ' + res.id);\r\n        }\r\n        const map = new Map();\r\n        let extraversion = 0;\r\n        let agreeableness = 0;\r\n        let conscientiousness = 0;\r\n        let neuroticism = 0;\r\n        let openness = 0;\r\n        // Reverse has to be subtracted from 6\r\n        extraversion += 6 - BFIParser(res['G9Q00001[SQ001]']);\r\n        extraversion += BFIParser(res['G9Q00001[SQ006]']);\r\n        extraversion /= 2;\r\n        extraversion = Math.round(100 * extraversion) / 100;\r\n        map.set('Extraversion', extraversion);\r\n        agreeableness += BFIParser(res['G9Q00001[SQ002]']);\r\n        agreeableness += 6 - BFIParser(res['G9Q00001[SQ007]']);\r\n        agreeableness += BFIParser(res['G9Q00001[SQ011]']);\r\n        agreeableness /= 3;\r\n        agreeableness = Math.round(100 * agreeableness) / 100;\r\n        map.set('Agreeableness', agreeableness);\r\n        conscientiousness += 6 - BFIParser(res['G9Q00001[SQ003]']);\r\n        conscientiousness += BFIParser(res['G9Q00001[SQ008]']);\r\n        conscientiousness /= 2;\r\n        conscientiousness = Math.round(100 * conscientiousness) / 100;\r\n        map.set('Conscientiousness', conscientiousness);\r\n        neuroticism += 6 - BFIParser(res['G9Q00001[SQ004]']);\r\n        neuroticism += BFIParser(res['G9Q00001[SQ009]']);\r\n        neuroticism /= 2;\r\n        neuroticism = Math.round(100 * neuroticism) / 100;\r\n        map.set('Neuroticism', neuroticism);\r\n        openness += 6 - BFIParser(res['G9Q00001[SQ005]']);\r\n        openness += BFIParser(res['G9Q00001[SQ010]']);\r\n        openness /= 2;\r\n        openness = Math.round(100 * openness) / 100;\r\n        map.set('Openness', openness);\r\n        this.bfiMapper.set(res.id, map);\r\n        for (const entry of map.entries()) {\r\n            res[`BFI_${entry[0]}`] = entry[1];\r\n        }\r\n    }\r\n    addCountOutput(target, source, qc) {\r\n        for (const entry of source) {\r\n            target.set(qc + ': ' + entry[0], entry[1]);\r\n        }\r\n    }\r\n    generateCountMap(participants, qc) {\r\n        const map = new Map();\r\n        for (const part of participants) {\r\n            const val = part[qc];\r\n            if (map.has(val)) {\r\n                map.set(val, map.get(val) + 1);\r\n            }\r\n            else {\r\n                map.set(val, 1);\r\n            }\r\n        }\r\n        for (const entry of map.entries()) {\r\n            map.set(entry[0], Math.round(100 * (entry[1] / participants.length) * 100) / 100);\r\n        }\r\n        this.addCountOutput(this.numbers, map, qc);\r\n        this.codeMapper.set(qc, map);\r\n    }\r\n    // only use this with agreement scales\r\n    generateAgreementInfo(responses, qc, key) {\r\n        if (!this.likertMapper.has(key)) {\r\n            this.likertMapper.set(key, new Map());\r\n        }\r\n        const agr = {\r\n            mean: -Infinity,\r\n            median: -Infinity,\r\n            variance: -Infinity,\r\n            size: -Infinity,\r\n            dev: -Infinity,\r\n            agreement: -Infinity,\r\n            ttest: -Infinity,\r\n            significant: false,\r\n            numbers: []\r\n        };\r\n        let agreers = 0;\r\n        const numbers = [];\r\n        let mean = 0;\r\n        for (const res of responses) {\r\n            if (res[qc] === '') {\r\n                console.log(res);\r\n            }\r\n            const num = this.generalScalaParser(res[qc]);\r\n            numbers.push(num);\r\n            mean += num;\r\n            if (num >= 4) {\r\n                agreers++;\r\n            }\r\n        }\r\n        mean /= responses.length;\r\n        agr.mean = Math.round(mean * 100) / 100;\r\n        agr.median = Math.round(ss.median(numbers) * 100) / 100;\r\n        agr.agreement = Math.round((agreers / responses.length) * 100) / 100;\r\n        agr.variance = ss.variance(numbers);\r\n        agr.dev = Math.round(Math.sqrt(agr.variance) * 100) / 100;\r\n        agr.size = numbers.length;\r\n        agr.ttest = ss.tTest(numbers, 3);\r\n        agr.numbers = numbers;\r\n        // This is for sample size 60\r\n        let pVal = 1.671;\r\n        if (numbers.length > 120) {\r\n            pVal = 1.658;\r\n        }\r\n        if (numbers.length > 1000) {\r\n            pVal = 1.646;\r\n        }\r\n        if (numbers.length > 2000) {\r\n            pVal = 1.645;\r\n        }\r\n        agr.significant = Math.abs(agr.ttest) > pVal;\r\n        if (questionCodeToNameMapper.has(qc)) {\r\n            this.likertMapper.get(key).set(questionCodeToNameMapper.get(qc), agr);\r\n        }\r\n        else {\r\n            this.likertMapper.get(key).set(qc, agr);\r\n        }\r\n        this.flatLikertMapper.set(qc, agr);\r\n    }\r\n    download(filename, content) {\r\n        const element = document.createElement('a');\r\n        element.setAttribute('href', 'data:text/csv;charset=utf-8,' + content);\r\n        element.setAttribute('download', filename);\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        document.body.removeChild(element);\r\n    }\r\n}\r\nAnalysisComponent.ɵfac = function AnalysisComponent_Factory(t) { return new (t || AnalysisComponent)(i0.ɵɵdirectiveInject(i1.HttpClient)); };\r\nAnalysisComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AnalysisComponent, selectors: [[\"app-analysis\"]], decls: 15, vars: 12, consts: [[1, \"content\", \"row\", \"pt-2\"], [1, \"col-12\", \"d-flex\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [\"class\", \"col-12\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"col-12\"], [1, \"row\", \"mt-3\"], [1, \"col-3\"], [\"type\", \"text\", 1, \"col-6\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-3\", 3, \"click\"], [1, \"col-6\"], [1, \"row\"], [\"type\", \"text\", 1, \"col-12\", 3, \"ngModel\", \"ngModelChange\"], [1, \"mr-5\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngModel\", \"ngModelChange\"], [4, \"ngFor\", \"ngForOf\"], [3, \"index\", \"title\", \"map\"], [\"class\", \"col-12 mb-5\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-12\", \"mb-5\"], [2, \"color\", \"#ff8f00\"], [1, \"col-4\"]], template: function AnalysisComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"button\", 2);\r\n        i0.ɵɵlistener(\"click\", function AnalysisComponent_Template_button_click_2_listener() { return ctx.content = \"Main\"; });\r\n        i0.ɵɵtext(3, \" Main \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(4, \"button\", 2);\r\n        i0.ɵɵlistener(\"click\", function AnalysisComponent_Template_button_click_4_listener() { return ctx.content = \"Likerts\"; });\r\n        i0.ɵɵtext(5, \" Likerts \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(6, \"button\", 2);\r\n        i0.ɵɵlistener(\"click\", function AnalysisComponent_Template_button_click_6_listener() { return ctx.content = \"Measures\"; });\r\n        i0.ɵɵtext(7, \" Measures \");\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵelementStart(8, \"button\", 2);\r\n        i0.ɵɵlistener(\"click\", function AnalysisComponent_Template_button_click_8_listener() { return ctx.content = \"Downloads\"; });\r\n        i0.ɵɵtext(9, \" Downloads \");\r\n        i0.ɵɵelementEnd()();\r\n        i0.ɵɵtemplate(10, AnalysisComponent_div_10_Template, 22, 4, \"div\", 3);\r\n        i0.ɵɵtemplate(11, AnalysisComponent_div_11_Template, 4, 4, \"div\", 3);\r\n        i0.ɵɵelement(12, \"hr\");\r\n        i0.ɵɵtemplate(13, AnalysisComponent_ng_container_13_Template, 8, 4, \"ng-container\", 4);\r\n        i0.ɵɵtemplate(14, AnalysisComponent_ng_container_14_Template, 2, 1, \"ng-container\", 4);\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵclassProp(\"active\", ctx.content === \"Main\");\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵclassProp(\"active\", ctx.content === \"Likerts\");\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵclassProp(\"active\", ctx.content === \"Measures\");\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵclassProp(\"active\", ctx.content === \"Downloads\");\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.content === \"Downloads\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.content === \"Main\");\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.content === \"Likerts\");\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.content === \"Measures\");\r\n    } }, directives: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatCheckbox, i2.NgForOf, i5.LikertDisplayComponent], pipes: [i2.KeyValuePipe], styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhbmFseXNpcy5jb21wb25lbnQuc2NzcyJ9 */\"] });\r\n"]},"metadata":{},"sourceType":"module"}